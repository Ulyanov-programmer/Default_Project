@import '../../styles/_environment.pcss';

:root {
  /* It is installed automatically by the script for working with the burger menu. */
  --burger-margin-top: 0.1px;
}

@custom-media --burger-menu-is-hidden (width >= 769px);
@custom-media --burger-menu-is-visible (width <= 769px);

.BurgerMenu {
  --menu-margin: 15px;
  position: fixed;
  z-index: 4 !important;
  inset: 0;
  transform: translate3d(0, -100vh, 0);

  overflow: auto;
  scroll-snap-type: y mandatory;

  width: 100vw;

  /* Sets the height of the menu, taking into account the offset from the header */
  height: calc(100vh - var(--burger-margin-top));
  margin-top: var(--burger-margin-top);

  background: rgb(0 0 0 / 30%);

  transition: all 0.3s ease;

  &.active {
    transform: translate3d(0, 0, 0);
  }

  ul {
    display: grid;
    gap: 10px;
    justify-items: right;
    margin-right: var(--menu-margin);

    li {
      scroll-snap-align: start;

      a,
      button {
        padding: 20px 15px;
        color: var(--text-c);
      }
    }
  }

  @media (--burger-menu-is-hidden) {
    display: none;
  }
}

.BurgerBtn {
  z-index: 5;
  display: block;

  /*
    ? This is the basic properties and animations of the burger button.
    If you find that a part of the <rect> extends beyond the boundaries of the <svg>,
    try to make the <svg> a square (width and height must be equal).
  */
  .BurgerSvg {
    > rect {
      transform-origin: center;
      transform-box: fill-box;
      transition: all 0.3s ease;

      &:nth-child(1) {
        width: 100%;
      }

      &:nth-child(2) {
        width: 100%;
      }

      &:nth-child(3) {
        width: 100%;
      }
    }
  }

  &.active {
    .rectTop {
      transform: rotate(45deg);

      x: 0%;
      y: 50%;
    }

    .rectCenter {
      @mixin hide;
    }

    .rectBottom {
      transform: rotate(-45deg);

      x: 0;
      y: 50%;
    }
  }

  @media (--burger-menu-is-hidden) {
    display: none;
  }
}

.NavMenu {
  @media (--burger-menu-is-visible) {
    display: none;
  }
}
